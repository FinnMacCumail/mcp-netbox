[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "netbox-mcp"
version = "1.0.0"
description = "NetBox Read/Write MCP Server - A Model Context Protocol server for safe, intelligent NetBox automation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Deployment Team", email = "info@deployment-team.nl"}
]
maintainers = [
    {name = "Deployment Team", email = "info@deployment-team.nl"}
]
keywords = ["netbox", "mcp", "network", "automation", "api", "llm"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "pynetbox==7.5.0",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "tomli>=2.0.0; python_version < '3.11'",
    "typing-extensions>=4.0.0",
    "mcp>=1.0.0",
    "cachetools>=5.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "psutil>=5.9.0",
    # Phase 3: OpenAI + LangGraph Orchestration
    "openai>=1.0.0",
    "langgraph>=0.2.0",
    "langchain-core>=0.1.0",
    "redis>=5.0.0",
    "aioredis>=2.0.0",
    "asyncio-throttle>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "responses>=0.23.0",
    "httpx>=0.24.0",
    "redis>=5.0.0",
    "rq>=1.15.0",
]

[project.urls]
Homepage = "https://github.com/Deployment-Team/netbox-mcp"
Repository = "https://github.com/Deployment-Team/netbox-mcp"
Issues = "https://github.com/Deployment-Team/netbox-mcp/issues"
Documentation = "https://github.com/Deployment-Team/netbox-mcp/wiki"

[project.scripts]
netbox-mcp = "netbox_mcp.server:main"
netbox-mcp-phase3 = "netbox_mcp.cli_phase3:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["netbox_mcp*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=netbox_mcp",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=95"
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "safety: marks tests as safety-critical functionality tests",
]

[tool.coverage.run]
source = ["netbox_mcp"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]